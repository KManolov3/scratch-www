extend type Mutation {
  testSetData(input: TestDataInput!): TestSetDataResult!
  testClearData: Boolean
}

input TestItemInput {
  mfrPartNum: String
  partDesc: String
  sku: String!
  upc: String
  retailPrice: Float
  onHand: Int
  planograms: [TestPlanogramInput]
  backStockSlots: [TestBackStockSlotInput]
}

input TestPlanogramInput {
  planogramId: String
  description: String
  seqNum: Int
}

input TestBackStockSlotInput {
  guid: String
  storeNumber: String
  slotId: Int
  slotName: String
  slotDescription: String
  sectionsLotName: String
  sectionsLotNum: String
  lastModified: Date
  qty: Int
}

input TestDataInput {
  storeNumber: String!
  items: [TestItemInput!]
  missingItemSkus: [String!]
  # cycleCounts: [TestCycleCountInput!]
}

type TestSetDataResult {
  storeNumber: String!
  items: [Item!]
  missingItemSkus: [String!]
  # cycleCounts: [CycleCount!]
}
